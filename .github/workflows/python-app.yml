# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-24.04

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: |
        sudo apt install -y python3-apt
        sudo apt show python3-apt
        python -m venv --system-site-packages .venv
        cd .venv/lib/python3.12 && ln -s /usr/lib/python3/dist-packages/ . && cd -
        source .venv/bin/activate
        python -m pip install --upgrade pip
        pip install flake8 pytest pytest-mock
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        cat > .flake8 << EOL
        [flake8]
        exclude =
            .git,
            __pycache__,
            docs/source/conf.py,
            build,
            dist,
            *.egg-info,
            .venv,
            venv,
            env
        max-line-length = 120
        EOL

        source .venv/bin/activate 
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        source .venv/bin/activate
        pytest -v
